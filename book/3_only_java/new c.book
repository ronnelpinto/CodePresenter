Chapter 1 - A Tutorial Introduction
Let us begin with a quick introduction in C. Our aim is to show the essential elements of the
language in real programs, but without getting bogged down in details, rules, and exceptions.
<pp_br>
<pp_java>import java.util.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.accessibility.*;
public class BigExample extends JFrame {
public BigExample() {
super("Big Accessibility Example");
setSize(700,500);
setDefaultCloseOperation(EXIT_ON_CLOSE);
JMenuBar jmb = new JMenuBar();
JMenu fileMenu = new JMenu("File");
JMenuItem openItem = new JMenuItem("Open");
JMenuItem saveItem = new JMenuItem("Save");
JMenuItem exitItem = new JMenuItem("Exit");
exitItem.addActionListener(new ActionListener() {
public void actionPerformed(ActionEvent ae) {
System.exit(0);
}
});
fileMenu.add(openItem);
fileMenu.add(saveItem);
fileMenu.add(new JSeparator());
fileMenu.add(exitItem);
jmb.add(fileMenu);
setJMenuBar(jmb);
JTextArea jta = new JTextArea("[Notes]\n");
JScrollPane sp1 = new JScrollPane(jta);
sp1.setMinimumSize(new Dimension(200,200));
sp1.setPreferredSize(new Dimension(200,200));
String[] titles = { "Name", "Start Date", "Job Title" };
String[][] data = {
{"Jordan", "2001", "Director"},
{"Naveen", "1999", "Programmer"},
{"Jia", "2000", "Analyst"},
{"Brooks", "1998", "Evangelist"}
};
JTable table = new JTable(data, titles);
table.getAccessibleContext().setAccessibleDescription("Employee Statistics");
JPanel rightPane = new JPanel(new BorderLayout());
rightPane.add(new JScrollPane(table), BorderLayout.CENTER);
rightPane.add(new JLabel(new ImageIcon("logo.gif")), BorderLayout.SOUTH);
JSplitPane jsp = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT, sp1, rightPane);
getContentPane().add(jsp, BorderLayout.CENTER);
JPanel bPane = new JPanel();
JButton okButton = new JButton("Ok");
JButton applyButton = new JButton("Apply");
JButton clearButton = new JButton("Clear");
bPane.add(okButton);
bPane.add(applyButton);
bPane.add(clearButton);
getContentPane().add(bPane, BorderLayout.SOUTH);
setVisible(true);
}
public static void main(String args[]) {
new BigExample();
new AssistiveExample();
}
}</pp_java>
<pp_br>
At this point, we are not trying to be complete or even precise (save that the examples are
meant to be correct). We want to get you as quickly as possible to the point where you can
write useful programs, and to do that we have to concentrate on the basics: variables and
constants, arithmetic, control flow, functions, and the rudiments of input and output. We are
intentionally leaving out of this chapter features of C that are important for writing bigger
programs. These include pointers, structures, most of C's rich set of operators, several controlflow
statements, and the standard library.
<pp_br>
<pp_javal>3_only_java/code/hello.java</pp_javal>
<pp_br>
At this point, we are not trying to be complete or even precise (save that the examples are
meant to be correct). We want to get you as quickly as possible to the point where you can
write useful programs, and to do that we have to concentrate on the basics: variables and
constants, arithmetic, control flow, functions, and the rudiments of input and output. We are
intentionally leaving out of this chapter features of C that are important for writing bigger
programs. These include pointers, structures, most of C's rich set of operators, several controlflow
statements, and the standard library.